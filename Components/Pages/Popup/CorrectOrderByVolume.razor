@page "/dialogOrder/{order_ID}"
@rendermode InteractiveServer

@inherits TestFillOrders
@inject DialogService сервисДиалога


    <RadzenTemplateForm TItem="Order" Data="order" Style="width: 700px; align-items: center">
        <RadzenRow>
            <RadzenLabel>
                Изменить план: Дата заказа: @order.OrderDate - @order.Manufacturer.Name<br />
                Тип изменения: целевой объем
            </RadzenLabel>
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                Измерение: <RadzenDropDown Data="@(Enum.GetValues(typeof(Units)).Cast<Enum>())" @bind-Value=@order.Unit
                                           AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Name="DropDownEnums">
                </RadzenDropDown>
            </RadzenColumn>
            <RadzenColumn>
                Объем: <RadzenNumeric TValue="float" Value="order.CountOfProduct" />
            </RadzenColumn>           
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                Дата заказа: <RadzenDatePicker Name="датаЗаказ" TValue="DateOnly" Value="order.OrderDate" />
            </RadzenColumn>
            <RadzenColumn>
                Дата отгрузки: <RadzenDatePicker TValue="DateOnly" Value="order.LoadDate" />
            </RadzenColumn>                           
        </RadzenRow>
        <RadzenRow>
            <RadzenLabel Style="width: 100%">
                Причина корректировки:
                <RadzenDropDown TValue="string" Data="@selectCorrectionReason" @bind-Value="@selectedCorrectionReason" Change="ChangeChoiceCorrectionReason" Placeholder="Выберите причину корректировки..." Style="width: 100%" />
            </RadzenLabel>                        
        </RadzenRow>
        <RadzenRow>
            <RadzenLabel Style="width: 100%">
                <RadzenTextArea Disabled="@NotAvailableOtherCorrectionReason" @bind-Value=@otherCorrectionReason Style="width: 100%" />
            </RadzenLabel>
        </RadzenRow>
        <RadzenRow Style="float: right">
            <RadzenButton ButtonType="ButtonType.Submit" >Применить</RadzenButton>
        </RadzenRow>        
    </RadzenTemplateForm>


@code {
    [Parameter] public int order_ID { get; set; }
    Order order, модель;
    List<string> selectCorrectionReason;
    bool NotAvailableOtherCorrectionReason = true;
    string selectedCorrectionReason;
    string otherCorrectionReason;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        order = Orders.Where(order => order.Id == order_ID).FirstOrDefault();

        selectCorrectionReason = new List<string>()
        {
            "Дозаказ", "Брак", "Ошибка прогноза", /* ..., */ "Другая причина"
        };

        if(!string.IsNullOrWhiteSpace(order.CorrectionReason))
        {
            if (selectCorrectionReason.Contains(order.CorrectionReason))
                selectedCorrectionReason = order.CorrectionReason;
            else
            {
                selectedCorrectionReason = "Другая причина";
                NotAvailableOtherCorrectionReason = false;
                otherCorrectionReason = order.CorrectionReason;
            }
        }
        
    }

    void ChangeChoiceCorrectionReason()
    {
        if (selectedCorrectionReason == "Другая причина")
        {
            NotAvailableOtherCorrectionReason = false;
        }
        else
        {
            NotAvailableOtherCorrectionReason = true;
            otherCorrectionReason = "";
        }
    }
}
