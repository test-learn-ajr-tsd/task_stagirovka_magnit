@page "/dialogOrder/{ID_заказа}"
@rendermode InteractiveServer

@inherits ТестЗаполнениеЗаказы
@inject DialogService сервисДиалога


    <RadzenTemplateForm TItem="Заказ" Data="заказ" Style="width: 700px; align-items: center">
        <RadzenRow>
            <RadzenLabel>
                Изменить план: Дата заказа: @заказ.ДатаЗаказа - @заказ.Поставщик.Наименование<br />
                Тип изменения: целевой объем
            </RadzenLabel>
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                Измерение: <RadzenDropDown Data="@(Enum.GetValues(typeof(ЕдиницыИзмерения)).Cast<Enum>())" @bind-Value=@заказ.ЕдиницыИзмерения
                                           AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Name="DropDownEnums">
                </RadzenDropDown>
            </RadzenColumn>
            <RadzenColumn>
                Объем: <RadzenNumeric TValue="float" Value="заказ.Количество" />
            </RadzenColumn>           
        </RadzenRow>
        <RadzenRow>
            <RadzenColumn>
                Дата заказа: <RadzenDatePicker Name="датаЗаказ" TValue="DateOnly" Value="заказ.ДатаЗаказа" />
            </RadzenColumn>
            <RadzenColumn>
                Дата отгрузки: <RadzenDatePicker TValue="DateOnly" Value="заказ.ДатаОтгрузки" />
            </RadzenColumn>                           
        </RadzenRow>
        <RadzenRow>
            <RadzenLabel Style="width: 100%">
                Причина корректировки:
                <RadzenDropDown TValue="string" Data="@причиныКорректировкиВыбор" @bind-Value="@выбраннаяПричинаКорректировки" Change="ВыборПричиныКорректировки" Placeholder="Выберите причину корректировки..." Style="width: 100%" />
            </RadzenLabel>                        
        </RadzenRow>
        <RadzenRow>
            <RadzenLabel Style="width: 100%">
                <RadzenTextArea Disabled="@НедоступноПолеДругаяПричинаКорректировки" @bind-Value=@другаяПричинаКорректировки Style="width: 100%" />
            </RadzenLabel>
        </RadzenRow>
        <RadzenRow Style="float: right">
            <RadzenButton ButtonType="ButtonType.Submit" >Применить</RadzenButton>
        </RadzenRow>        
    </RadzenTemplateForm>


@code {
    [Parameter] public int ID_заказа { get; set; }
    Заказ заказ, модель;
    List<string> причиныКорректировкиВыбор;
    bool НедоступноПолеДругаяПричинаКорректировки = true;
    string выбраннаяПричинаКорректировки;
    string другаяПричинаКорректировки;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        заказ = Заказы.Where(order => order.Id == ID_заказа).FirstOrDefault();

        причиныКорректировкиВыбор = new List<string>()
        {
            "Дозаказ", "Брак", "Ошибка прогноза", /* ..., */ "Другая причина"
        };

        if(!string.IsNullOrWhiteSpace(заказ.ПричинаКорректировки))
        {
            if (причиныКорректировкиВыбор.Contains(заказ.ПричинаКорректировки))
                выбраннаяПричинаКорректировки = заказ.ПричинаКорректировки;
            else
            {
                выбраннаяПричинаКорректировки = "Другая причина";
                НедоступноПолеДругаяПричинаКорректировки = false;
                другаяПричинаКорректировки = заказ.ПричинаКорректировки;
            }
        }
        
    }

    void ВыборПричиныКорректировки()
    {
        if (выбраннаяПричинаКорректировки == "Другая причина")
        {
            НедоступноПолеДругаяПричинаКорректировки = false;
        }
        else
        {
            НедоступноПолеДругаяПричинаКорректировки = true;
            другаяПричинаКорректировки = "";
        }
    }

    void Применить(Заказ заказ)
    {
        Console.WriteLine(заказ.Количество);

    }
}
